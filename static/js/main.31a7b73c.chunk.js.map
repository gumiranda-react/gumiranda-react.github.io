{"version":3,"sources":["store/modules/auth/reducer.js","store/modules/user/reducer.js","store/modules/rootReducer.js","services/api.js","store/modules/auth/actions.js","services/history.js","store/modules/auth/sagas.js","store/modules/user/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducers.js","store/createStore.js","pages/_layouts/auth/styles.js","pages/_layouts/auth/index.js","pages/_layouts/default/styles.js","pages/_layouts/default/index.js","routes/Route.js","pages/SignIn/index.js","pages/SignUp/index.js","pages/Dashboard/index.js","pages/Profile/index.js","routes/index.js","styles/global.js","App.js","index.js","assets/logo.svg"],"names":["INITIAL_STATE","token","signed","loading","profile","combineReducers","auth","state","action","produce","draft","type","payload","user","api","axios","create","baseURL","signInSuccess","history","createBrowserHistory","signIn","signUp","email","senha","senhaConfirmacao","call","post","response","data","usuario","put","push","toast","error","nome","all","takeLatest","rootSaga","reducers","sagaMiddleware","createSagaMiddleware","sagaMonitor","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","key","storage","whitelist","persistor","persistStore","run","Wrapper","styled","div","Content","darken","AuthLayout","children","DefaultLayout","RouteWrapper","Component","component","isPrivate","rest","getState","to","Layout","render","props","defaultProps","schema","Yup","shape","required","SignIn","dispatch","useDispatch","useSelector","src","logo","alt","onSubmit","signInRequest","name","placeholder","min","SignUp","signUpRequest","console","tron","log","Dashboard","Profile","Routes","path","process","exact","createGlobalStyle","App","autoClose","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.31a7b73c.chunk.js","sourcesContent":["import produce from 'immer';\n\nconst INITIAL_STATE = {\n    token: null,\n    signed: false,\n    loading: false,\n};\nexport default function auth(state = INITIAL_STATE, action) {\n    return produce(state, draft => {\n        switch (action.type) {\n            case '@auth/SIGN_IN_SUCCESS': {\n                draft.token = action.payload.token;\n                draft.signed = true;\n                draft.loading = false;\n                break;\n            }\n            case '@auth/SIGN_IN_REQUEST': {\n                draft.loading = true;\n                break;\n            }\n            case '@auth/SIGN_FAILURE': {\n                draft.loading = false;\n                break;\n            }\n            default:\n        }\n    });\n}\n","import produce from 'immer';\n\nconst INITIAL_STATE = {\n    profile: null,\n};\nexport default function user(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case '@auth/SIGN_IN_SUCCESS':\n            return produce(state, draft => {\n                draft.profile = action.payload.user;\n            });\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth/reducer';\nimport user from './user/reducer';\n\nexport default combineReducers({\n    auth,\n    user,\n});\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://graduandoeasy.herokuapp.com/api/',\n});\n\nexport default api;\n","export function signInRequest(email, senha, senhaConfirmacao) {\n    return {\n        type: '@auth/SIGN_IN_REQUEST',\n        payload: { email, senha, senhaConfirmacao },\n    };\n}\n\nexport function signInSuccess(token, user) {\n    return {\n        type: '@auth/SIGN_IN_SUCCESS',\n        payload: { token, user },\n    };\n}\nexport function signUpRequest(nome, email, senha, senhaConfirmacao) {\n    return {\n        type: '@auth/SIGN_UP_REQUEST',\n        payload: { nome, email, senha, senhaConfirmacao },\n    };\n}\n\nexport function signFailure() {\n    return {\n        type: '@auth/SIGN_FAILURE',\n    };\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\nimport { signInSuccess, signFailure } from './actions';\nimport history from '~/services/history';\n\nexport function* signIn({ payload }) {\n    try {\n        const { email, senha } = payload;\n        const senhaConfirmacao = senha;\n\n        const response = yield call(api.post, 'usuario/autenticar', {\n            email,\n            senha,\n            senhaConfirmacao,\n        });\n        const { token, usuario } = response.data;\n        /* if(!user.provider){\n        console.tron.error('Usuario nao eh prestador');\n        return;\n    }\n    */\n        yield put(signInSuccess(token, usuario));\n        history.push('/dashboard');\n    } catch (err) {\n        toast.error('Falha na autenticação, verifique usuário e senha');\n        yield put(signFailure());\n    }\n}\nexport function* signUp({ payload }) {\n    try {\n        const { nome, email, senha, senhaConfirmacao } = payload;\n        yield call(api.post, 'usuario/register', {\n            nome,\n            email,\n            senha,\n            senhaConfirmacao,\n        });\n        history.push('/');\n    } catch (err) {\n        toast.error('Falha no cadastro, verifique os dados');\n        yield put(signFailure());\n    }\n}\n\nexport default all([\n    takeLatest('@auth/SIGN_UP_REQUEST', signUp),\n    takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n]);\n","import { all } from 'redux-saga/effects';\n\nexport default all([]);\n","import { all } from 'redux-saga/effects';\nimport auth from './auth/sagas';\nimport user from './user/sagas';\n\nexport default function* rootSaga() {\n    return yield all([auth, user]);\n}\n","import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport createStore from './createStore';\nimport persistReducers from './persistReducers';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n    process.env.NODE_ENV === 'development'\n        ? console.tron.createSagaMonitor()\n        : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default reducers => {\n    const persistReducers = persistReducer(\n        {\n            key: 'barber',\n            storage,\n            whitelist: ['auth', 'user'],\n        },\n        reducers\n    );\n    return persistReducers;\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nexport default (reducers, middlewares) => {\r\n    const enhancer =\r\n        process.env.NODE_ENV === 'development'\r\n            ? compose(\r\n                  console.tron.createEnhancer(),\r\n                  applyMiddleware(...middlewares)\r\n              )\r\n            : applyMiddleware(...middlewares);\r\n    return createStore(reducers, enhancer);\r\n};\r\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Wrapper = styled.div`\n    height: 100%;\n    background: linear-gradient(-90deg, #7159c1, #ab59c1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Content = styled.div`\n    width: 100%;\n    max-width: 315px;\n    margin-top: 50px;\n    text-align: center;\n    form {\n        display: flex;\n        flex-direction: column;\n        margin-top: 30px;\n        input {\n            background: rgba(0, 0, 0, 0.1);\n            border: 0;\n            border-radius: 4px;\n            height: 44px;\n            padding: 0 15px;\n            color: #fff;\n            margin: 0 0 10px;\n            &::placeholder {\n                color: rgba(255, 255, 255, 0.7);\n            }\n        }\n        span {\n            color: #fb6f91;\n            align-self: flex-start;\n            margin: 0 0 10px;\n            font-weight: bold;\n        }\n        button {\n            margin: 5px 0 0;\n            height: 44px;\n            background: #3b9eff;\n            font-weight: bold;\n            color: #fff;\n            border: 0;\n            border-radius: 4px;\n            font-size: 16px;\n            transition: background 0.2s;\n            &:hover {\n                background: ${darken(0.03, '#3b9eff')};\n            }\n        }\n        a {\n            color: #fff;\n            margin-top: 15px;\n            font-size: 16px;\n            opacity: 0.8;\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper, Content } from './styles';\r\n\r\nexport default function AuthLayout({ children }) {\r\n    return (\r\n        <Wrapper>\r\n            <Content>{children}</Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nAuthLayout.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 100%;\r\n    background: linear-gradient(-90deg, #7159c1, #ab59c1);\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper } from './styles';\r\n\r\nexport default function DefaultLayout({ children }) {\r\n    return <Wrapper>{children}</Wrapper>;\r\n}\r\n\r\nDefaultLayout.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthLayout from '~/pages/_layouts/auth';\nimport DefaultLayout from '~/pages/_layouts/default';\nimport { store } from '~/store/';\n\nexport default function RouteWrapper({\n    component: Component,\n    isPrivate = false,\n    ...rest\n}) {\n    const { signed } = store.getState().auth;\n    if (!signed && isPrivate) {\n        return <Redirect to=\"/\" />;\n    }\n    if (signed && !isPrivate) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    const Layout = signed ? DefaultLayout : AuthLayout;\n\n    return (\n        <Route\n            {...rest}\n            render={props => (\n                <Layout>\n                    <Component {...props} />\n                </Layout>\n            )}\n        />\n    );\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n        .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\n\nimport { signInRequest } from '~/store/modules/auth/actions';\nimport logo from '~/assets/logo.svg';\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .email('Insira um email válido')\n        .required('O email é obrigatório'),\n    senha: Yup.string().required('A senha é obrigatória'),\n});\n// import { Container } from './styles';\nexport default function SignIn() {\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.auth.loading);\n    function handleSubmit({ email, senha }) {\n        dispatch(signInRequest(email, senha, senha));\n        // console.tron.log(data);\n    }\n    return (\n        <>\n            <img src={logo} alt=\"Barber\" />\n            <Form schema={schema} onSubmit={handleSubmit}>\n                <Input name=\"email\" type=\"email\" placeholder=\"Seu email\" />\n                <Input name=\"senha\" type=\"password\" placeholder=\"Sua senha\" />\n                <button type=\"submit\">\n                    {loading ? 'Carregando...' : 'Acessar'}\n                </button>\n                <Link to=\"/register\">\n                    Ainda não tem conta? Clique aqui para criar\n                </Link>\n            </Form>\n        </>\n    );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport logo from '~/assets/logo.svg';\nimport { signUpRequest } from '~/store/modules/auth/actions';\n\nconst schema = Yup.object().shape({\n    nome: Yup.string().required('O nome é obrigatório'),\n    email: Yup.string()\n        .email('Insira um email válido')\n        .required('O email é obrigatório'),\n    senha: Yup.string()\n        .min(6, 'No mínimo 6 caracteres')\n        .required('A senha é obrigatória'),\n    senhaConfirmacao: Yup.string()\n        .min(6, 'No mínimo 6 caracteres')\n        .required('A senha é obrigatória'),\n});\n// import { Container } from './styles';\nexport default function SignUp() {\n    const dispatch = useDispatch();\n\n    function handleSubmit({ nome, email, senha, senhaConfirmacao }) {\n        dispatch(signUpRequest(nome, email, senha, senhaConfirmacao));\n        console.tron.log({ nome, email, senha, senhaConfirmacao });\n    }\n    return (\n        <>\n            <img src={logo} alt=\"Barber\" />\n            <Form schema={schema} onSubmit={handleSubmit}>\n                <Input name=\"nome\" placeholder=\"Nome completo\" />\n                <Input name=\"email\" type=\"email\" placeholder=\"Seu email\" />\n                <Input name=\"senha\" type=\"password\" placeholder=\"Sua senha\" />\n                <Input\n                    name=\"senhaConfirmacao\"\n                    type=\"password\"\n                    placeholder=\"Sua senha\"\n                />\n                <button type=\"submit\">Criar conta</button>\n                <Link to=\"/\">Já tenho login</Link>\n            </Form>\n        </>\n    );\n}\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nexport default function Dashboard() {\r\n    return <h1>Dashboard</h1>;\r\n}\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <div />\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SignIn from '~/pages/SignIn';\nimport SignUp from '~/pages/SignUp';\n\nimport Dashboard from '~/pages/Dashboard';\nimport Profile from '~/pages/Profile';\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route\n                    path={`${process.env.PUBLIC_URL}/dashboard`}\n                    component={Dashboard}\n                    isPrivate\n                />\n                <Route\n                    path={`${process.env.PUBLIC_URL}/register`}\n                    component={SignUp}\n                />\n                <Route\n                    path={`${process.env.PUBLIC_URL}/`}\n                    exact\n                    component={SignIn}\n                />\n                <Route\n                    path={`${process.env.PUBLIC_URL}/profile`}\n                    component={Profile}\n                    isPrivate\n                />\n\n                <Route\n                    path={`${process.env.PUBLIC_URL}/`}\n                    component={() => <h1>404</h1>}\n                />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default createGlobalStyle`\n\n@import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  *:focus{\n      outline:0;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: 'Roboto',Arial, Helvetica, sans-serif;\n  }\n\n  a{\n      text-decoration:none;\n  }\n\n  ul{\n    list-style:none;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport './config/ReactotronConfig';\nimport { store, persistor } from './store'; // esse import deve necessariamente vir depois do import do reactotron\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\nimport history from './services/history';\n\nfunction App() {\n    return (\n        <>\n            <Provider store={store}>\n                <PersistGate persistor={persistor}>\n                    <Router history={history}>\n                        <Routes />\n                    </Router>\n                    <GlobalStyle />\n                    <ToastContainer autoClose={3000} />\n                </PersistGate>\n            </Provider>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.63c71f84.svg\";"],"sourceRoot":""}